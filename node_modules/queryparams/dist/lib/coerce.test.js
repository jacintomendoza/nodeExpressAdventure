"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var coerce_1 = require("../../src/lib/coerce");
describe("coerce", function () {
    it("coerces booleans", function () {
        expect(coerce_1.coerce({ foo: "true" })).toEqual({ foo: true });
        expect(coerce_1.coerce({ foo: true })).toEqual({ foo: true });
        expect(coerce_1.coerce({ foo: "false" })).toEqual({ foo: false });
        expect(coerce_1.coerce({ foo: false })).toEqual({ foo: false });
    });
    it("coerces numbers", function () {
        expect(coerce_1.coerce({ foo: "1" })).toEqual({ foo: 1 });
        expect(coerce_1.coerce({ foo: "0" })).toEqual({ foo: 0 });
        expect(coerce_1.coerce({ foo: "1.5" })).toEqual({ foo: 1.5 });
        expect(coerce_1.coerce({ foo: 1 })).toEqual({ foo: 1 });
    });
    it("coerces nulls", function () {
        expect(coerce_1.coerce({ foo: "null" })).toEqual({ foo: null });
        expect(coerce_1.coerce({ foo: null })).toEqual({ foo: null });
    });
    it("leaves strings alone", function () {
        expect(coerce_1.coerce({ foo: "hello" })).toEqual({ foo: "hello" });
    });
    it("coerces arrays of values", function () {
        expect(coerce_1.coerce({
            foo: ["1", "1.5", "hello", "null", "true", false, 1],
        })).toEqual({ foo: [1, 1.5, "hello", null, true, false, 1] });
    });
    it("coerces arrays with a single value", function () {
        expect(coerce_1.coerce({ foo: ["1"] })).toEqual({ foo: [1] });
    });
    it("coerces nested arrays", function () {
        expect(coerce_1.coerce({
            foo: [
                ["1", "2", "3"],
                ["4", "5", "6"],
                ["a", "b", "c"],
            ],
        }, {
            // Ignores hints
            foo: [
                ["a", "b", "c"],
                [1, 2],
            ],
        })).toEqual({
            foo: [
                [1, 2, 3],
                [4, 5, 6],
                ["a", "b", "c"],
            ],
        });
    });
    it("allows strict arrays to be enforced", function () {
        expect(coerce_1.coerce({
            foo: [
                ["1", "2", "3"],
                ["4", "5", "6"],
                ["a", "b", "c"],
            ],
        }, {
            // Ignores hints
            foo: [
                ["a", "b", "c"],
                [1, 2],
            ],
        }, { strictArrays: true })).toEqual({
            foo: [["1", "2", "3"], [4, 5, null], null],
        });
    });
});
